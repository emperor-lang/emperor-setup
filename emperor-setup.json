{
	"$schema": "https://github.com/argspec/argspec/releases/download/v1.0.2/dual-arguments-schema.json",
	"program": "emperor-setup",
	"version": "1.0.0",
	"date": "03/07/2019",
	"bugs": "Please file any bugs or issues at <github.com/emperor-lang/emperor-setup/issues>",
	"author": "This is maintained by Edward Jones, source code is available at <github.com/emperor-lang/emperor-setup>",
	"licence": "Copyright (c) 2019, Edward Jones\n\n%%%%%%LICENSE_START(GPLv2+_DOC_FULL)\nThis is free documentation; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of\nthe License, or (at your option) any later version.\n\nThe GNU General Public License's references to \"object code\"\nand \"executables\" are to be interpreted as the output of any\ndocument formatting or typesetting system, including\nintermediate and printed output.\n\nThis manual is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public\nLicense along with this manual; if not, see\n<http://www.gnu.org/licenses/>.\n%%%%%%LICENSE_END",
	"description": "Emperor package manager",
	"longDescription": "This is the package manager for the Emperor language. It handles the installation, maintenance and usage of packages used by programs written using the emperor language. Where necessary it will download and compile any necessary files.\nPackages are installed in to a folder in the user's directories (e.g. ~/.emperor/packages) hence it does not require root user permissions to operate.",
	"examples": [
		{
			"input": "emperor-setup -I",
			"description": "Install dependencies"
		},
		{
			"input": "emperor-setup -a pkg",
			"description": "Add package 'pkg' to the dependency list at the most recent known version"
		},
		{
			"input": "emperor-setup -a pkg:1.2.3",
			"description": "Add package 'pkg' to the dependency list at version '1.2.3'"
		},
		{
			"input": "emperor-setup -U",
			"description": "Update the list of known packages"
		},
		{
			"input": "gcc-8 $(emperor-setup -ce) program.c -o program $(emperor-setup -l)",
			"description": "Compile 'program.c' with the emperor packages of the current directory, and that program.c is the entry-point"
		}
	],
	"args": [
		{
			"short": "-i",
			"long": "--input",
			"type": "string",
			"default": "",
			"help": "Input identifier (how this is used depends on the operation performed)",
			"dest": "input",
			"metaDest": "file",
			"mandatory": false
		},
		{
			"short": "-C",
			"long": "--include-location",
			"type": "flag",
			"default": "false",
			"mandatory": false,
			"dest": "includeLocation",
			"help": "Output the emperor header location"
		},
		{
			"short": "-a",
			"long": "--add-dependency",
			"type": "string",
			"mandatory": false,
			"dest": "addDependency",
			"metaDest": "pkg",
			"help": "Add the dependency specified by the -i flag to the current package",
			"default": ""
		},
		{
			"short": "-I",
			"long": "--install-dependencies",
			"type": "flag",
			"default": "false",
			"mandatory": false,
			"dest": "installDependencies",
			"help": "Install the dependencies of the current project"
		},
		{
			"short": "-h",
			"long": "--help",
			"help": "Display a usage message and exit",
			"type": "help",
			"dest": "showHelp",
			"mandatory": false,
			"default": "false"
		},
		{
			"short": "-c",
			"long": "--cflags",
			"type": "flag",
			"mandatory": false,
			"help": "Output GCC flags",
			"default": "false",
			"dest": "cFlags"
		},
		{
			"short": "-l",
			"long": "--libs",
			"type": "flag",
			"mandatory": false,
			"help": "Output required library flags",
			"default": "false",
			"dest": "libs"
		},
		{
			"short": "-B",
			"long": "--binary-install-location",
			"type": "flag",
			"mandatory": false,
			"help": "Location where binary executables are located once installed",
			"default": "false",
			"dest": "binaryInstallLocation"
		},
		{
			"short": "-L",
			"long": "--library-install-location",
			"type": "flag",
			"dest": "libraryInstallLocation",
			"mandatory": false,
			"default": "false",
			"help": "Location where emperor libraries are located once installed"
		},
		{
			"short": "-D",
			"long": "--data-install-location",
			"type": "flag",
			"default": "false",
			"dest": "dataInstallLocation",
			"mandatory": false,
			"help": "Location where data files for emperor programs may be installed (read/write)"
		},
		{
			"short": "-f",
			"long": "--force",
			"type": "flag",
			"default": "false",
			"dest": "force",
			"mandatory": false,
			"help": "Force updates regardless of whether a dependency is already present"
		},
		{
			"short": "-d",
			"long": "--dry-run",
			"type": "flag",
			"default": "false",
			"dest": "dryRun",
			"mandatory": false,
			"help": "Perform a dry run (print the commands which would be executed without running them)"
		},
		{
			"short": "-e",
			"long": "--entry-point",
			"type": "flag",
			"default": "false",
			"dest": "entryPoint",
			"mandatory": false,
			"help": "Enforce that this is the entry-point"
		},
		{
			"short": "-U",
			"long": "--update-known-package-list",
			"type": "flag",
			"default": "false",
			"dest": "updatePackageRepo",
			"mandatory": false,
			"help": "Update the list of known packages"
		},
		{
			"short": "-#",
			"long": "--language-header-location",
			"type": "flag",
			"default": "false",
			"dest": "languageHeaderLocation",
			"mandatory": false,
			"help": "Output the location of the location of the language-specific C headers. These are only used by the *emperor* compiler, any headers provided by packages should be located in the directory specified by the --include-location flag, instead of -#."
		},
		{
			"short": "-g",
			"long": "--get",
			"type": "string",
			"default": "",
			"dest": "getPackageLocation",
			"mandatory": false,
			"help": "Output the location of a particular package",
			"metaDest": "pkg"
		},
		{
			"short": "-b",
			"long": "--bare",
			"type": "flag",
			"default": "false",
			"dest": "bareProject",
			"mandatory": false,
			"help": "Output compilation flags without libraries or include locations. Useful to ensure that foreign C code is compatible with emperor code. This also makes -lb do nothing."
		}
	]
}